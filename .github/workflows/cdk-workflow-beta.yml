name: Generate and Set Environment Secrets
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  set-secrets:
    runs-on: ubuntu-latest

    steps:
      - name: Determine environment
        id: env
        run: |
          if [[ ${{ github.ref }} == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "environment=preview" >> $GITHUB_OUTPUT
          fi

      - name: Generate credentials
        id: generate-creds
        run: |
          ENV_PREFIX="${{ steps.env.outputs.environment }}"

          echo '{
            "accessKey": "'${ENV_PREFIX}_$(openssl rand -hex 20)'",
            "secretKey": "'${ENV_PREFIX}_$(openssl rand -hex 32)'"
          }' > credentials.json

      #   - name: Install GitHub CLI
      #     run: |
      #       type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
      #       curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
      #       && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
      #       && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
      #       && sudo apt update \
      #       && sudo apt install gh -y

      - name: Set environment secrets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ENVIRONMENT="${{ steps.env.outputs.environment }}"

          # Set secrets using gh cli
          gh secret set ACCESS_KEY --env $ENVIRONMENT --body "$(jq -r .accessKey credentials.json)"
          gh secret set SECRET_KEY --env $ENVIRONMENT --body "$(jq -r .secretKey credentials.json)"

          echo "Successfully set secrets for $ENVIRONMENT environment"
