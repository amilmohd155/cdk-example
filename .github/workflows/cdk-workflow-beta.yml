name: Deploy CDK Example

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  cdk:
    runs-on: ubuntu-latest
    outputs:
      AWS_ACCESS_KEY_ID: ${{ steps.set-outputs.outputs.ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ steps.set-outputs.outputs.SECRET_ACCESS_KEY }}
    env:
      TABLE_NAME: ${{ secrets.TABLE_NAME }}
      EXTERNAL_ID: ${{ secrets.EXTERNAL_ID }}
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{vars.AWS_REGION}}
          role-to-assume: ${{secrets.AWS_ROLE_ARN}}

      - name: AWS account - Debug
        run: aws sts get-caller-identity

      - name: CDK deploy
        run: |
          export CDK_DEFAULT_ACCOUNT=$(aws sts get-caller-identity | jq -r '.Account')
          npx --yes cdk deploy \
              --require-approval never \
              --outputs-file outputs.json

      - name: Get secrets from AWS Secrets Manager
        id: secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: znap-url-secret
          parse-json-secrets: true

      - name: Set outputs
        id: set-outputs
        run: |
          ACCESS_KEY_ID=$(echo "${{ steps.secrets.outputs.secrets }}" | jq -r '.ZNAP_URL_SECRET_AWS_ACCESS_KEY_ID')
          SECRET_ACCESS_KEY=$(echo "${{ steps.secrets.outputs.secrets }}" | jq -r '.ZNAP_URL_SECRET_AWS_SECRET_ACCESS_KEY')
          echo "AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID" >> $GITHUB_OUTPUT
          echo "AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY" >> $GITHUB_OUTPUT

  node:
    runs-on: ubuntu-latest
    needs: cdk
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Print AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ needs.cdk.outputs.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ needs.cdk.outputs.AWS_SECRET_ACCESS_KEY }}
        run: |
          npm run example

  # job1:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     key1: ${{ steps.generate_json.outputs.key1 }}
  #     key2: ${{ steps.generate_json.outputs.key2 }}
  #   steps:
  #     - name: Generate JSON output
  #       id: generate_json
  #       run: |
  #         # Generate JSON data
  #         echo '{"key1":"value1","key2":"value2"}' > output.json

  #         # Parse JSON and set each key as an output using $GITHUB_OUTPUT
  #         key1=$(jq -r '.key1' output.json)
  #         key2=$(jq -r '.key2' output.json)

  #         echo "key1=$key1" >> "$GITHUB_OUTPUT"
  #         echo "key2=$key2" >> "$GITHUB_OUTPUT"

  # job2:
  #   needs: job1
  #   runs-on: ubuntu-latest
  #   env:
  #     KEY1: ${{ needs.job1.outputs.key1 }}
  #     KEY2: ${{ needs.job1.outputs.key2 }}
  #   steps:
  #     - name: Use the JSON keys as separate environment variables
  #       run: |
  #         echo "KEY1 is $KEY1"
  #         echo "KEY2 is $KEY2"
